
import java.util.Calendar;
//import java.util.GregorianCalendar;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * 
 * @author formation
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        //selectionnerAujourdhui();
        remplirListe();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
     public static int calculerAge(String asDateNaissance) {
        /*
         Prend en parametre une String au format jj/mm/aaaa
         */
        int liAge = 0;
        //Instanciation d'un nouvel objet de la classe Calendar
        Calendar calAujourdhui = Calendar.getInstance();
        //Récupération de du jour en cours.
        int jourAujourdhui = calAujourdhui.get(Calendar.DAY_OF_MONTH);
        //Récupération du mois en cours.
        int moisAujourdhui = calAujourdhui.get(Calendar.MONTH) + 1;
        //Récupération de l'année en cours.
        int anneeAujourdhui = calAujourdhui.get(Calendar.YEAR);

        //Transtypage (int) de la date saisie en parametre de la methode en supprimant les "/"
        int jourNaissance = Integer.valueOf(asDateNaissance.split("/")[0]);
        int moisNaissance = Integer.valueOf(asDateNaissance.split("/")[1]);
        int anneeNaissance = Integer.valueOf(asDateNaissance.split("/")[2]);

        //Calcul de la différence entre anneeAujourd'hui et anneeNaissance.
        int anneesDiff = anneeAujourdhui - anneeNaissance;
        //Si moisNaissance est supérieur au mois en cours, décrementation de la valeur de la variable anneesDiff
        if (moisNaissance > moisAujourdhui) {
            anneesDiff--;
        }
        //Si moisNaissance est équivalent au mois en cours
        //et si jourNaissance est supérieur à jourAujourdhui, décrementation de la valeur de la variable anneesDiff
        if (moisNaissance == moisAujourdhui && jourNaissance > jourAujourdhui) {
            anneesDiff--;
        }
        //Retourne résultat.
        return anneesDiff;
    } /// calculerAge
    
    /*
    private void selectionnerAujourdhui() {
        Calendar cal = new GregorianCalendar();

        int jour = cal.get(Calendar.DAY_OF_MONTH);
        int mois = cal.get(Calendar.MONTH) + 1;
        int annee = cal.get(Calendar.YEAR);

        jComboBoxJours.setSelectedItem(jour);
        jComboBoxMois.setSelectedItem(mois);
        jComboBoxAnnees.setSelectedItem(annee);
    } /// selectionnerAjourdhui
   */
     private void remplirListe() {
        for (int i = 1; i <= 31; i++) {
            jComboBoxJours.addItem(i);
        }
        for (int i = 1; i <= 12; i++) {
            jComboBoxMois.addItem(i);
        }
        for (int i = 1900; i <= 2025; i++) {
            jComboBoxAnnees.addItem(i);
        }
    } /// remplirListe
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextFieldAge = new javax.swing.JTextField();
        jButtonGo = new javax.swing.JButton();
        jLabelMessage = new javax.swing.JLabel();
        jComboBoxJours = new javax.swing.JComboBox();
        jComboBoxMois = new javax.swing.JComboBox();
        jComboBoxAnnees = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Age ?");

        jButtonGo.setText("Go");
        jButtonGo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGoActionPerformed(evt);
            }
        });

        jLabelMessage.setText("Message");

        jComboBoxJours.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Jours" }));

        jComboBoxMois.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Mois" }));

        jComboBoxAnnees.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Années" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelMessage)
                            .addComponent(jButtonGo)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(119, 119, 119)
                                .addComponent(jTextFieldAge, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBoxJours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jComboBoxMois, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(jComboBoxAnnees, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(89, 89, 89))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxJours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxMois, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxAnnees, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(jButtonGo)
                .addGap(64, 64, 64)
                .addComponent(jLabelMessage)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonGoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGoActionPerformed
        // TODO add your handling code here:
        //jLabelMessage.setText(jTextFieldAge.getText());
        // Déclarations
        int age;
        String lsAge;
        boolean isNum = true;
        String message = "";
        char c;
      

        // IN
        //Valeur de lsAge = valeur saisie dans variable jTextField Age
        lsAge = jTextFieldAge.getText();
        // Vérification si saisie est un bien un nombre.
        // Si longeur de lsAge(épurée des espaces et autres...) = 0 (autrment dit si le champs est vide).
        if (lsAge.trim().length() == 0) {
            //System.out.println("Vide");
            //Alors affiché le message suivant
            message = "la saisie est vide !!!!!";
        } else {
            //Si lsAge(épurée des espaces et autres...) est rempli
            lsAge = lsAge.trim();
            //System.out.println("Pas vide");
            // Pas vide
            //Faire une boucle sur la longeur de la saisie
            for (int i = 0; i < lsAge.length(); i++) {
                //affectation de (i) a la varible c et vérifier à chaque passage
                c = lsAge.charAt(i);
                //Si c n'est pas compris entre 0 et 9.
                if (c < '0' || c > '9') {
                    //la variable isNum vaut false
                    isNum = false;
                    //et affiche message = pas num!
                    message = "Pas num";
                }
              
            }
        
            // number
            if (isNum) {
                // Vérification si saisie est un nombre compris entre 7 et 77.
                //Transtypage de l'age saisie en nombre.
                age = Integer.valueOf(jTextFieldAge.getText());
                // Acceptables
                if (age >= 7 && age <= 77) {
                    if (age >= 18) {
                        message = "Majeur";
                    } else {
                        message = "Mineur";
                    }
                } else {
                    // Inacceptables
                    if (age < 7) {
                        message = "Trop jeune !!!";
                    } else {
                        message = "Trop vieux !!!";
                    }
                }
                
            } else {
                // pas number
                message = "Pas numérique !!!";
            }
            
        }
        //Affichage du message en fonction du traitement.
        jLabelMessage.setText(message);
        
        //Récupération des saisies Combobox et convertion en string
        String j = jComboBoxJours.getSelectedItem().toString();
        String m = jComboBoxMois.getSelectedItem().toString();
        String a = jComboBoxAnnees.getSelectedItem().toString();
        
        //Concaténation des valeurs + "/".
        String dateSaisie = j + "/" + m + "/" + a;
        
        //Déclaration variable type Integer qui contient le résultat de la méthode calculerAge avec dateSaisie en parametre.
        Integer RsltCalcul = calculerAge(dateSaisie);
        
        
        
        // Affichage du résultat
        jLabelMessage.setText(RsltCalcul.toString());
    }//GEN-LAST:event_jButtonGoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonGo;
    private javax.swing.JComboBox jComboBoxAnnees;
    private javax.swing.JComboBox jComboBoxJours;
    private javax.swing.JComboBox jComboBoxMois;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelMessage;
    private javax.swing.JTextField jTextFieldAge;
    // End of variables declaration//GEN-END:variables
}
