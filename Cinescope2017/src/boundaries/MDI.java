/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package boundaries;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author formation
 */
public class MDI extends javax.swing.JFrame {

    /**
     * Creates new form MDI
     */
    public MDI() {
        initComponents();
        setVisible(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopPane = new javax.swing.JDesktopPane();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        menuBar = new javax.swing.JMenuBar();
        jMenuFichier = new javax.swing.JMenu();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        jMenuFenetre = new javax.swing.JMenu();
        contentMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();
        jMenuAide = new javax.swing.JMenu();
        jMenuItemApropos = new javax.swing.JMenuItem();
        jMenuItemContenu = new javax.swing.JMenuItem();
        jMenuCrud = new javax.swing.JMenu();
        jMenuItemAjoutPays = new javax.swing.JMenuItem();
        jMenuItemSuppressionPays = new javax.swing.JMenuItem();
        jMenuItemPaysVisualisation = new javax.swing.JMenuItem();
        jMenuItemModificationPays = new javax.swing.JMenuItem();
        jMenuItemArrondissements = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jMenuFichier.setMnemonic('f');
        jMenuFichier.setText("Fichier");

        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        jMenuFichier.add(openMenuItem);

        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Save");
        jMenuFichier.add(saveMenuItem);

        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Save As ...");
        saveAsMenuItem.setDisplayedMnemonicIndex(5);
        jMenuFichier.add(saveAsMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        jMenuFichier.add(exitMenuItem);

        menuBar.add(jMenuFichier);

        jMenuFenetre.setMnemonic('h');
        jMenuFenetre.setText("Fenêtre");

        contentMenuItem.setMnemonic('c');
        contentMenuItem.setText("Contents");
        jMenuFenetre.add(contentMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        jMenuFenetre.add(aboutMenuItem);

        menuBar.add(jMenuFenetre);

        jMenuAide.setText("Aide");

        jMenuItemApropos.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemApropos.setText("A propos");
        jMenuItemApropos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAproposActionPerformed(evt);
            }
        });
        jMenuAide.add(jMenuItemApropos);

        jMenuItemContenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItemContenu.setText("Contenu");
        jMenuItemContenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemContenuActionPerformed(evt);
            }
        });
        jMenuAide.add(jMenuItemContenu);

        menuBar.add(jMenuAide);

        jMenuCrud.setMnemonic('e');
        jMenuCrud.setText("CRUD");

        jMenuItemAjoutPays.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemAjoutPays.setText("Pays(Ajout)");
        jMenuItemAjoutPays.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAjoutPaysActionPerformed(evt);
            }
        });
        jMenuCrud.add(jMenuItemAjoutPays);

        jMenuItemSuppressionPays.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemSuppressionPays.setText("Pays(Suppression)");
        jMenuItemSuppressionPays.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSuppressionPaysActionPerformed(evt);
            }
        });
        jMenuCrud.add(jMenuItemSuppressionPays);

        jMenuItemPaysVisualisation.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemPaysVisualisation.setText("Pays(Visualisation)");
        jMenuItemPaysVisualisation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemPaysVisualisationActionPerformed(evt);
            }
        });
        jMenuCrud.add(jMenuItemPaysVisualisation);

        jMenuItemModificationPays.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_M, java.awt.event.InputEvent.ALT_MASK));
        jMenuItemModificationPays.setText("Pays(Modification)");
        jMenuItemModificationPays.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemModificationPaysActionPerformed(evt);
            }
        });
        jMenuCrud.add(jMenuItemModificationPays);

        jMenuItemArrondissements.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItemArrondissements.setText("Arrondissements");
        jMenuItemArrondissements.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemArrondissementsActionPerformed(evt);
            }
        });
        jMenuCrud.add(jMenuItemArrondissements);

        menuBar.add(jMenuCrud);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
   
  
    /*
    private String EcrireNomPays() {
            List <String> Pays = new ArrayList();
            lireFichier();
            
            try {
            FileWriter lfwFichier = new FileWriter("villes.txt");
            BufferedWriter lbwBuffer = new BufferedWriter(lfwFichier);

            lbwBuffer.write("75011;Paris");
            lbwBuffer.newLine();

            lbwBuffer.write("75012;Paris\r\n"); // --- Alternative

            lbwBuffer.write("59000;Lille\r\n");

            //lbwBuffer.flush(); // --- Facultatif
            lbwBuffer.close(); // --- Facultatif, non, non, non!!!
            lfwFichier.close();

            System.out.println("Fin de l'écriture d'un fichier texte");
        } catch (IOException e) {
            System.err.println(e);
        }
            
    }///EcrireNomPays
    
   */ 
    private String[] importPays() {
        // Déclaration d'un tableau ordinal statique
        String[] tPays = null;
        // Déclaration d'un tableau ordinal dynamique
        List<String> liste = new ArrayList();

        try {
            // --- Ouverture du fichier
            FileReader lfrFichier = new FileReader("pays.csv");
            // --- Bufferisation
            BufferedReader lbrBuffer = new BufferedReader(lfrFichier);
            //Déclaration d'une ligne
            String lsLigne;
            //Déclaration d'un tableau vide destiné a contenir une colonne du fichier "pays.csv"
            String[] tChamps;

            // Boucle dans le fichier
            while ((lsLigne = lbrBuffer.readLine()) != null) {
                //Nettoyage de la ligne de tout parasites
                lsLigne = lsLigne.trim();
                // Si la ligne n'est pas vide
                if (lsLigne.length() > 0) {
                    //Suppression des caractères passés en paramètre.
                    //Et affectation du résultat à au tableau tChamps. 
                    tChamps = lsLigne.split("\",\"");
                    // S'il y a 6 champs(ou 6 élements dans le tableau)
                    if (tChamps.length == 6) {
                        // On ajoute le 5e champ dans le tableau Liste dynamique
                        liste.add(tChamps[4]);
                    }
                }
            }

            // On transforme l'ArrayList en Tableau statique
            tPays = liste.toArray(new String[liste.size()]);

            // Fermetures
            lbrBuffer.close();
            lfrFichier.close();
        } catch (IOException e) {
            //jLabelMessage.setText(e.getMessage());
        }
        return tPays;
    } /// importPays

    
    
    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void jMenuItemAproposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAproposActionPerformed
        // TODO add your handling code here:
        JInternalFrameApropos jpr = new JInternalFrameApropos();
        this.desktopPane.add(jpr);
    }//GEN-LAST:event_jMenuItemAproposActionPerformed

    private void jMenuItemContenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemContenuActionPerformed
        // TODO add your handling code here:
        JInternalContenu jic = new JInternalContenu();
        this.desktopPane.add(jic);
    }//GEN-LAST:event_jMenuItemContenuActionPerformed

    private void jMenuItemSuppressionPaysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSuppressionPaysActionPerformed
        // TODO add your handling code here:
        JInternalFrameSuppressionPays jsp = new JInternalFrameSuppressionPays();
        this.desktopPane.add(jsp);
    }//GEN-LAST:event_jMenuItemSuppressionPaysActionPerformed

    private void jMenuItemAjoutPaysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAjoutPaysActionPerformed
        // TODO add your handling code here:
        JInternalFrameAjoutPays jap = new JInternalFrameAjoutPays();
        this.desktopPane.add(jap);
    }//GEN-LAST:event_jMenuItemAjoutPaysActionPerformed

    private void jMenuItemPaysVisualisationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemPaysVisualisationActionPerformed
        // TODO add your handling code here:
        JInternalFrameVisualisationPays jva = new JInternalFrameVisualisationPays();
        this.desktopPane.add(jva);
        
             
    }//GEN-LAST:event_jMenuItemPaysVisualisationActionPerformed

    private void jMenuItemModificationPaysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemModificationPaysActionPerformed
        // TODO add your handling code here:
        JInternalFrameModificationPays jmp = new JInternalFrameModificationPays();
        this.desktopPane.add(jmp);
    }//GEN-LAST:event_jMenuItemModificationPaysActionPerformed

    private void jMenuItemArrondissementsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemArrondissementsActionPerformed
        // TODO add your handling code here:
        JFrameTable jft = new JFrameTable();
        this.desktopPane.add(jft);
    }//GEN-LAST:event_jMenuItemArrondissementsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MDI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenuItem contentMenuItem;
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JMenu jMenuAide;
    private javax.swing.JMenu jMenuCrud;
    private javax.swing.JMenu jMenuFenetre;
    private javax.swing.JMenu jMenuFichier;
    private javax.swing.JMenuItem jMenuItemAjoutPays;
    private javax.swing.JMenuItem jMenuItemApropos;
    private javax.swing.JMenuItem jMenuItemArrondissements;
    private javax.swing.JMenuItem jMenuItemContenu;
    private javax.swing.JMenuItem jMenuItemModificationPays;
    private javax.swing.JMenuItem jMenuItemPaysVisualisation;
    private javax.swing.JMenuItem jMenuItemSuppressionPays;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JMenuItem saveMenuItem;
    // End of variables declaration//GEN-END:variables

}
